<UserControl x:Class="Gstc.Collections.ObservableDictionary.Demo.ObservableDictionaryControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:pt="http://propertytools.org/wpf" 
             xmlns:components="clr-namespace:Gstc.Collections.ObservableDictionary.Demo.Components"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             DataContext="{Binding CustomerVm, RelativeSource={RelativeSource Self}}" 
             x:Name="Self"
             >
    <DockPanel>
        <TextBox DockPanel.Dock="Bottom" Height="100" Name="LogTextBox" IsReadOnly="True" TextWrapping="Wrap">
            ObservableDictionary will provide an Observable Enumerable view that will provide WPF databinding, but it will n
            it will not guarentee order between operations. All NotifyCollectionChanged events are called with reset, so
            for large collections, this will be slow.
        </TextBox>
        <components:DictionaryButtonControl DockPanel.Dock="Bottom" CustomerVm="{Binding CustomerVm, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="280"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <ListView Grid.Column="0" Name="ListViewKeys" ItemsSource="{Binding EnumerableKeyCustomers}" SelectionChanged="KeyListView_SelectionChanged" SelectionMode="Single"/>
            <pt:PropertyGrid Grid.Column="1" Name="ItemPropertyGrid" SelectedObject="{Binding SelectedCustomer}"  Grid.ColumnSpan="2"></pt:PropertyGrid>
        </Grid>
    </DockPanel>
</UserControl>
